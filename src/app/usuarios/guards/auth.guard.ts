import { Injectable } from '@angular/core';
import { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';
import { Observable } from 'rxjs';
import { AuthService } from '../auth.service';

@Injectable({
  providedIn: 'root'
})
// ===============
// GUARD POR TOKEN
// ===============
// Seguridad a nivel superior. 
// Se ejecuta antes de hacer la petici√≥n al back.
export class AuthGuard implements CanActivate {

  // Cargamos pa inyectar el codigo.
  constructor(
    private authService: AuthService,
    private router: Router
  ) { }

  // COMPRUEBA PERMISOS RUTA pot TOKEN
  // Si tiene permiso return ok.
  // Si no, return false y redirige to login
  canActivate(
    next: ActivatedRouteSnapshot, // Autogenerated
    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean { // Autogenerated
    if (this.authService.isAuthenticated()) {
      // COMPRUEBA SI HA EXPIRADO EL TOKEN
      if (this.isTokenExpirado()) {
        this.authService.logout();
        this.router.navigate(['/login']);
        return false;
      }
      return true;
    }
    this.router.navigate(['/login']);
    return false;
  }

  isTokenExpirado(): boolean {
    // OBTENEMOS TOKEN
    let token = this.authService.token;
    // OBTENEMOS PAYLOAD
    let payload = this.authService.obtenerDatosToken(token);
    // FECHA ACTUAL en SEGUNDOS
    let now = new Date().getTime() / 1000;
    // COMPARAMOS FECHA EXPIRACION TOKEN con la FECHA ACTUAL.
    if (payload.exp < now) {
      return true;
    }
    return false;
  }
}
